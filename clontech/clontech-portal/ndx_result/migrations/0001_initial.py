# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-05-23 14:17
from __future__ import unicode_literals

import ndx_result.models.teststrip
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Interpretation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of test strip or group', max_length=32)),
                ('classification', models.CharField(help_text='Classification of the result.', max_length=32)),
                ('colour', models.CharField(blank=True, help_text='Colour the app uses for this result.', max_length=7, verbose_name='colour in app')),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('device_make', models.CharField(blank=True, max_length=255, verbose_name='manufacturer/brand of the device')),
                ('device_model', models.CharField(blank=True, max_length=255)),
                ('location_latitude', models.FloatField(blank=True, null=True)),
                ('location_longitude', models.FloatField(blank=True, null=True)),
                ('identity', models.CharField(blank=True, max_length=255)),
                ('asset', models.CharField(blank=True, max_length=255)),
                ('tank_no', models.CharField(blank=True, max_length=255, verbose_name='tank number')),
                ('test_lot_no', models.CharField(blank=True, max_length=255, verbose_name='Test lot number')),
                ('fuel_lot_no', models.CharField(blank=True, max_length=255, verbose_name='fuel lot number')),
                ('unparsed_data', models.TextField(blank=True, default='', verbose_name='Data received with the result that could not be parsed, in json format.')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'permissions': (('view_own_result', 'View own results'), ('view_org_result', "View all organisation's results"), ('view_all_results', 'View all results'), ('extract_result', 'Extract results to pdf/excel'), ('view_backoffice_data', 'View fuel lot, result breakdown')),
                'get_latest_by': 'created_at',
            },
        ),
        migrations.CreateModel(
            name='Teststrip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile', ndx_result.models.teststrip.FloatTupleField()),
                ('baseline', ndx_result.models.teststrip.FloatTupleField()),
                ('cline_score', models.FloatField()),
                ('cline_peak_position', models.IntegerField(verbose_name='index of Cline peak')),
                ('tline_score', models.FloatField()),
                ('tline_peak_position', models.IntegerField(verbose_name='index of Tline peak')),
                ('image', models.ImageField(blank=True, null=True, upload_to='strip_images')),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='teststrips', to='ndx_result.Result')),
            ],
        ),
        migrations.AddField(
            model_name='interpretation',
            name='result',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='interpretations', to='ndx_result.Result'),
        ),
        migrations.AlterUniqueTogether(
            name='interpretation',
            unique_together=set([('result', 'name')]),
        ),
    ]
